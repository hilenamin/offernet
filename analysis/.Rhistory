install.packages("knitr")
opportunities.df <- read.table(file = "analysisDataTemp.csv",header=F,sep=',');
library(xtable);
print(xtable(opportunities.df,align='lc',caption="Opportunity statistics"),type='html',include.rownames=FALSE, NA.string="n.a.");
install.packages("xtable")
opportunities.df <- read.table(file = "analysisDataTemp.csv",header=F,sep=',');
library(xtable);
print(xtable(opportunities.df,align='lc',caption="Opportunity statistics"),type='html',include.rownames=FALSE, NA.string="n.a.");
installr
install.packages("installR")
.rs.is_tex_installed()
install.packages("RMySQL")
install.packages("RMySQL")
install.packages("RMySQL")
library(RMySQL)
con <- dbConnect(MySQL(),
user="reader", password="bdPxHZmUVa9TZfqf",
dbname="cooladata", host="vveitas.privatedns.org")
res<-dbSendQuery(con,'select * from stats;')
stats <- fetch(res, n = -1)
stats
stats.percentageReopenned
stats#percentageReopenned
stats$percentageReopenned
df <- data.frame(matrix(unlist(stats), nrow=1, byrow=T))
df
df <- data.frame(matrix(unlist(stats), nrow=123, byrow=T))
df <- data.frame(matrix(unlist(stats), nrow=12, byrow=T))
df
library (plyr)
df <- ldply (l, data.frame)
install.packages("plyr")
library (plyr)
df <- ldply (stats, data.frame)
df
?plyr::ldply()
??plyr::ldply()
plyr::ldply()??
;
colnames(ds) <- c("statistic", "value")
colnames(df) <- c("statistic", "value")
df
colnames(ds) <- c("statistic", "value")
library(RMySQL)
con <- dbConnect(MySQL(),
user="reader", password="bdPxHZmUVa9TZfqf",
dbname="cooladata", host="vveitas.privatedns.org")
res<-dbSendQuery(con,'select * from cooladata.reopenedOpportunities;')
reopened <- fetch(res, n = 100000)
on.exit(dbDisconnect(con))
library (plyr)
reopened.df <- ldply (reopened, data.frame)
reopened.df
reopened
library(RMySQL)
con <- dbConnect(MySQL(),
user="reader", password="bdPxHZmUVa9TZfqf",
dbname="cooladata", host="vveitas.privatedns.org")
res<-dbSendQuery(con,'select opportunityId,min(lastModified_calc),fromStage,toStage from cooladata.ami_csv where fromStage='' group by opportunityID,fromStage;')
opportunityStarts <- fetch(res, n = -1)
library(RMySQL)
con <- dbConnect(MySQL(),
user="reader", password="bdPxHZmUVa9TZfqf",
dbname="cooladata", host="vveitas.privatedns.org")
res<-dbSendQuery(con,"select opportunityId,min(lastModified_calc),fromStage,toStage from cooladata.ami_csv where fromStage='' group by opportunityID,fromStage;")
opportunityStarts <- fetch(res, n = -1)
opportunityStarts
opportunityStarts[1,1]
opportunityStarts[1,2]
knitr::opts_chunk$set(echo = TRUE)
library(RMySQL)
con <- dbConnect(MySQL(),
user="reader", password="bdPxHZmUVa9TZfqf",
dbname="cooladata", host="vveitas.privatedns.org")
res<-dbSendQuery(con,"select opportunityId,min(lastModified_calc),fromStage,toStage from cooladata.ami_csv where fromStage='' group by opportunityID,fromStage;")
opportunityStarts <- fetch(res, n = -1)
for (i in 1:nrow(opportunityStarts)) {
opportunityID <-oportunityStarts[i,1]
startDate <- oportunityStarts[i,2]
query <-sprintf("
select opportunityId, toStage as stepName, date_format(from_unixtime((lastModified_calc - 25569)*86400),'%m/%d/%Y') as lastModifiedDate, (lastModified_calc - @startDate) as stepDuration from (
select 2 as rank, opportunityID, toStage, max(lastModified_calc) as LastModified_calc
from cooladata.ami_csv
where opportunityID=%opportunityID
group by opportunityID,toStage
union
select 1 as rank, opportunityID, 'Start' as stepName, @startDate:=lastModified_calc as LastModified_calc
from cooladata.ami_csv
where opportunityID=%opportunityID AND fromStage=''
group by opportunityID
) a
order by rank, lastModified_calc asc
",opportunityID)
res<-dbSendQuery(con,'select opportunityID, originalEventCount,distinctStageNames from cooladata.opportunityInfo where duplicateLastModified=originalEventCount;')
durationPath <- fetch(res, n = -1)
durationPath
}
library(RMySQL)
con <- dbConnect(MySQL(),
user="reader", password="bdPxHZmUVa9TZfqf",
dbname="cooladata", host="vveitas.privatedns.org")
res<-dbSendQuery(con,"select opportunityId,min(lastModified_calc),fromStage,toStage from cooladata.ami_csv where fromStage='' group by opportunityID,fromStage;")
opportunityStarts <- fetch(res, n = -1)
for (i in 1:nrow(opportunityStarts)) {
opportunityID <-opportunityStarts[i,1]
startDate <- opportunityStarts[i,2]
query <-sprintf("
select opportunityId, toStage as stepName, date_format(from_unixtime((lastModified_calc - 25569)*86400),'%m/%d/%Y') as lastModifiedDate, (lastModified_calc - @startDate) as stepDuration from (
select 2 as rank, opportunityID, toStage, max(lastModified_calc) as LastModified_calc
from cooladata.ami_csv
where opportunityID=%opportunityID
group by opportunityID,toStage
union
select 1 as rank, opportunityID, 'Start' as stepName, @startDate:=lastModified_calc as LastModified_calc
from cooladata.ami_csv
where opportunityID=%opportunityID AND fromStage=''
group by opportunityID
) a
order by rank, lastModified_calc asc
",opportunityID)
res<-dbSendQuery(con,'select opportunityID, originalEventCount,distinctStageNames from cooladata.opportunityInfo where duplicateLastModified=originalEventCount;')
durationPath <- fetch(res, n = -1)
durationPath
library(RMySQL)
con <- dbConnect(MySQL(),
user="reader", password="bdPxHZmUVa9TZfqf",
dbname="cooladata", host="vveitas.privatedns.org")
res<-dbSendQuery(con,"select opportunityId,min(lastModified_calc),fromStage,toStage from cooladata.ami_csv where fromStage='' group by opportunityID,fromStage;")
opportunityStarts <- fetch(res, n = -1)
for (i in 1:nrow(opportunityStarts)) {
opportunityID <-opportunityStarts[i,1]
startDate <- opportunityStarts[i,2]
query <-sprintf("
select opportunityId, toStage as stepName, date_format(from_unixtime((lastModified_calc - 25569)*86400),'%m/%d/%Y') as lastModifiedDate, (lastModified_calc - @startDate) as stepDuration from (
select 2 as rank, opportunityID, toStage, max(lastModified_calc) as LastModified_calc
from cooladata.ami_csv
where opportunityID=%opportunityID
group by opportunityID,toStage
union
select 1 as rank, opportunityID, 'Start' as stepName, @startDate:=lastModified_calc as LastModified_calc
from cooladata.ami_csv
where opportunityID=%opportunityID AND fromStage=''
group by opportunityID
) a
order by rank, lastModified_calc asc
",opportunityID)
res<-dbSendQuery(con,'select opportunityID, originalEventCount,distinctStageNames from cooladata.opportunityInfo where duplicateLastModified=originalEventCount;')
durationPath <- fetch(res, n = -1)
durationPath
library(RMySQL)
con <- dbConnect(MySQL(),
user="reader", password="bdPxHZmUVa9TZfqf",
dbname="cooladata", host="vveitas.privatedns.org")
res<-dbSendQuery(con,"select opportunityId,min(lastModified_calc),fromStage,toStage from cooladata.ami_csv where fromStage='' group by opportunityID,fromStage;")
opportunityStarts <- fetch(res, n = -1)
for (i in 1:nrow(opportunityStarts)) {
opportunityID <-opportunityStarts[i,1]
startDate <- opportunityStarts[i,2]
query <-sprintf("
select opportunityId, toStage as stepName, date_format(from_unixtime((lastModified_calc - 25569)*86400),'%m/%d/%Y') as lastModifiedDate, (lastModified_calc - @startDate) as stepDuration from (
select 2 as rank, opportunityID, toStage, max(lastModified_calc) as LastModified_calc
from cooladata.ami_csv
where opportunityID=%opportunityID
group by opportunityID,toStage
union
select 1 as rank, opportunityID, 'Start' as stepName, @startDate:=lastModified_calc as LastModified_calc
from cooladata.ami_csv
where opportunityID=%opportunityID AND fromStage=''
group by opportunityID
) a
order by rank, lastModified_calc asc
",opportunityID)
res<-dbSendQuery(con,'select opportunityID, originalEventCount,distinctStageNames from cooladata.opportunityInfo where duplicateLastModified=originalEventCount;')
durationPath <- fetch(res, n = -1)
print(durationPath)
}
knit_with_parameters('~/repos/yspaceship/doc/README.Rmd')
install.packages('rjson')
library(rjson)
json_file <- paste(script.dir,"/_temp/cucumber-json-report.json")
getwd()
library(rjson)
wd<-'/home/vveitas/repos/yspaceship/doc'
json_file <- paste(wd,"/_temp/cucumber-json-report.json")
json_data <- fromJSON(file=json_file)
json_file <- paste(wd,"/_temp/cucumber-json-report.json",sep='')
json_data <- fromJSON(file=json_file)
json_report <- fromJSON(file=json_file)
json_report$elements
elem<-json_report$elements
json_report
json_report[1]
json_report[1]$name
json_report[1]$elements
json_report[1]
json_report[1][1]
json_report[1][1]$elements
json_report[1][1]
json_report[[1]]
json_report[[1]]$elements
json_report[[1]]$elements[1]
json_report[[1]]$elements$steps
json_report[[1]]$elements[1]$steps
json_report[[1]]$elements[[1]]$steps
json_report[[1]]$elements[[1]]$steps[[1]]$name
json_report[[1]]$elements[[1]]$steps[[]]$name
json_report[[1]]$elements[[1]]$steps[$name]
json_report[[1]]$elements[[1]]$steps[[1]]$name
is(json_report)
library(jsonlite)
library(rjson)
wd<-'/home/vveitas/repos/yspaceship/doc'
json_file <- paste(wd,"/_temp/cucumber-json-report.json",sep='')
json_report <- fromJSON(file=json_file)
library(jsonlite)
wd<-'/home/vveitas/repos/yspaceship/doc'
json_file <- paste(wd,"/_temp/cucumber-json-report.json",sep='')
json_report <- fromJSON(file=json_file)
library(jsonlite)
wd<-'/home/vveitas/repos/yspaceship/doc'
json_file <- paste(wd,"/_temp/cucumber-json-report.json",sep='')
json_report <- stream_in(url(json_file))
json_report <- stream_in(json_file)
library(json)
library(rjson)
wd<-'/home/vveitas/repos/yspaceship/doc'
json_file <- paste(wd,"/_temp/cucumber-json-report.json",sep='')
json_data <-rjson::fromJSON(file=json_file)
library(rjson)
wd<-'/home/vveitas/repos/yspaceship/doc'
json_file <- paste(wd,"/_temp/cucumber-json-report.json",sep='')
json_data <-rjson::fromJSON(file=json_file)
library(jsonlite)
json_report <- jsonlite::fromJSON(json_data)
wd<-'/home/vveitas/repos/yspaceship/doc'
library(jsonlite)
json_file <- paste(wd,"/_temp/cucumber-json-report.json",sep='')
json_data <-stream_in(file(json_file))
wd<-'/home/vveitas/repos/yspaceship/doc'
library(jsonlite)
json_file <- paste(wd,"/_temp/cucumber-json-report.json",sep='')
json_data <-stream_in(file(json_file))
file(json_file)
json_data <-stream_in(file(json_file))
library(ndjson)
install.packages('ndjson')
ndjson::stream_in(wd)
report<-ndjson::stream_in(wd)
View(report)
View(report)
json_data <-stream_in(file(json_file))
json_data <-stream_in(file(json_file),flatten=TRUE)
library(jsonlite)
json_file <- paste(wd,"/_temp/cucumber-json-report.json",sep='')
json_data <-stream_in(file(json_file))
json_report <- jsonlite::fromJSON(json_data)
library(jsonlite)
json_file <- paste(wd,"/_temp/cucumber-json-report.json",sep='')
json_data <-stream_in(file(json_file))
wd<-'/home/vveitas/repos/yspaceship/doc'
library(jsonlite)
json_file <- paste(wd,"/_temp/cucumber-json-report.json",sep='')
json_data <-stream_in(file(json_file))
View(report)
View(json_data)
wd<-'/home/vveitas/repos/yspaceship/doc'
library(rjson)
json_file <- paste(wd,"/_temp/cucumber-json-report.json",sep='')
json_report <- fromJSON(file=json_data)
json_report <- fromJSON(json_data)
library(rjson)
json_file <- paste(wd,"/_temp/cucumber-json-report.json",sep='')
json_report <- fromJSON(json_data)
json_report <- fromJSON(txt=json_data)
json_report <- fromJSON(file(json_data))
json_report <- fromJSON(file=json_file)
json_report <- rjson::fromJSON(file(json_file))
json_file <- paste(wd,"/_temp/cucumber-json-report.json",sep='')
file(json_file)
json_report <- rjson::fromJSON(file(json_file))
wd<-'/home/vveitas/repos/yspaceship/doc'
library(rjson)
json_file <- paste(wd,"/_temp/cucumber-json-report.json",sep='')
json_report <- rjson::fromJSON(file(json_file))
wd<-'/home/vveitas/repos/yspaceship/doc'
library(rjson)
json_file <- paste(wd,"/_temp/cucumber-json-report.json",sep='')
json_report <- rjson::fromJSON(file=json_file)
json_report[[1]]$elements[[1]]$steps[[1]]$name
for (stepDef in json_report) {
for (element in StepDef$elements) {
for (step in element$step) {
step$name
}
}
}
for (stepDef in json_report) {
for (element in stepDef$elements) {
for (step in element$step) {
step$name
}
}
}
for (stepDef in json_report) {
for (element in stepDef$elements) {
for (step in element$step) {
print(step$name)
}
}
}
for (stepDef in json_report) {
for (element in stepDef$elements) {
print(paste(element$keyword,": ",element$name))
for (step in element$step) {
print(step$name)
}
}
}
for (stepDef in json_report) {
print(paste(stepDef$keyword,": ",stepDef$name))
for (element in stepDef$elements) {
print(paste(element$keyword,": ",element$name))
for (step in element$step) {
print(paste(step$keyword,": ",step$name))
}
}
}
for (stepDef in json_report) {
print(paste("stepDef: ",stepDef$keyword,": ",stepDef$name))
for (element in stepDef$elements) {
print(paste("element: ",element$keyword,": ",element$name))
for (step in element$step) {
print(paste("step: ",step$keyword,": ",step$name))
}
}
}
for (stepDef in json_report) {
cat(paste("##",stepDef$keyword,": ",stepDef$name))
for (element in stepDef$elements) {
print(paste("element: ",element$keyword,": ",element$name))
for (step in element$step) {
print(paste("step: ",step$keyword,": ",step$name))
}
}
}
cat(trimws(paste(stepDef$keyword,": ",stepDef$name),"\n"))
cat(trimws(paste(stepDef$keyword,": ",stepDef$name),"\n"),'l')
cat(trimws(paste(stepDef$keyword,": ",stepDef$name),"\n"),'left')
cat(trimws(paste(stepDef$keyword,": ",stepDef$name),"\n"),"left")
cat(trimws(paste(stepDef$keyword,": ",stepDef$name),"\n"),arg="left")
x <- "  Some text. "
x
trimws(x)
trimws(x, "l")
trimws(x, "r")
cat(trimws(paste(stepDef$keyword,": ",stepDef$name),"\n"),arg="left"))
cat(trimws(paste(stepDef$keyword,": ",stepDef$name,"\n")))
for (stepDef in json_report) {
cat(trimws(paste(stepDef$keyword,": ",stepDef$name,"\n"),"l"))
for (element in stepDef$elements) {
print(paste("element: ",element$keyword,": ",element$name))
for (step in element$step) {
print(paste("step: ",step$keyword,": ",step$name))
}
}
}
for (stepDef in json_report) {
cat(paste("##",stepDef$keyword,": ",stepDef$name,"\n"))
for (element in stepDef$elements) {
cat(paste("###",element$keyword,": ",element$name,"\n"))
for (step in element$step) {
cat(paste("* ",step$keyword,": ",step$name,"\n"))
}
}
}
setwd("~/repos/offernet-graph")
setwd("~/repos/offernet-graph/analysis")
